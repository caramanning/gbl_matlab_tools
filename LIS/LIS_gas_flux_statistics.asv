load LISAug23_CH4N2O_CTD.mat
LISA = LISAug23_CH4N2O_CTD; % October

disp('CH4 RSD std Aug')
dAC = find(LISA.CH4_std_nmolkg ~=0);
[mean(LISA.CH4_std_nmolkg(dAC)./LISA.CH4_mean_nmolkg(dAC)).*100 mean(LISO.CH4_std_nmolkg(dAC))]

disp('N2O RSD std Aug')
dAN = find(LISA.N2O_std_nmolkg ~=0);
[mean(LISA.N2O_std_nmolkg(dAN)./LISA.N2O_mean_nmolkg(dAN)).*100 mean(LISA.N2O_std_nmolkg(dAN))]

%%

load LISOct23_CH4N2O_CTD.mat
LISO = LISOct23_CH4N2O_CTD; % October

disp('CH4 RSD std Oct')
dOC = find(LISO.CH4_std_nmolkg ~=0);
[mean(LISO.CH4_std_nmolkg(dOC)./LISO.CH4_mean_nmolkg(dOC)).*100 mean(LISO.CH4_std_nmolkg(dOC))]

disp('N2O RSD std Oct')
dON = find(LISO.N2O_std_nmolkg ~=0);
[mean(LISO.N2O_std_nmolkg(dON)./LISO.N2O_mean_nmolkg(dON)).*100 mean(LISO.N2O_std_nmolkg(dON))]

%%

load LISMay24_CH4N2O_CTD.mat
LISM = LISOct23_CH4N2O_CTD; % October

disp('CH4 RSD std Oct')
dMC = find(LISM.CH4_std_nmolkg ~=0);
[mean(LISM.CH4_std_nmolkg(dMC)./LISM.CH4_mean_nmolkg(dMC)).*100 mean(LISM.CH4_std_nmolkg(dMC))]

disp('N2O RSD std Oct')
dMN = find(LISM.N2O_std_nmolkg ~=0);
[mean(LISM.N2O_std_nmolkg(dMN)./LISM.N2O_mean_nmolkg(dMN)).*100 mean(LISM.N2O_std_nmolkg(dMN))]


%%
CH4s = [LISA.CH4_std_nmolkg(dAC) LISO.CH4_std_nmolkg(dOC) LISM.CH4_std_nmolkg(dMC)];
CH4m = [LISA.CH4_mean_nmolkg(dAC) LISO.CH4_mean_nmolkg(dOC) LISM.CH4_mean_nmolkg(dMC)]

%%

% stnlist from west to east
stnlist = {'EXR1', 'EXRX', 'MID3', 'MID4', 'MID5', 'WLIS', 'WLI6'};

km_transect = [0    1.4482    5.4270    9.0377   13.0335   16.2552   18.4318];

km_transect_appx = [0 1.4 5.4 9.0 13.0 16.3 18.4];

%%
% load August data
load LIS_gas_flux_Aug.mat;
gfA = LIS_gas_flux_Aug;
gfA.station_str = string(gfA.station);

sl = string(stnlist);
gfA_avg = table;

gfA_avg.station = sl'; % create table for average flux data
gfA_avg.lat = nan(numel(stnlist),1);
gfA_avg.lon = nan(numel(stnlist),1);
gfA_avg.n2o_nmolkg = nan(numel(stnlist),1);
gfA_avg.n2o_std_nmolkg = nan(numel(stnlist),1);
gfA_avg.n2o_eq_nmolkg = nan(numel(stnlist),1);
gfA_avg.ch4_nmolkg = nan(numel(stnlist),1);
gfA_avg.ch4_std_nmolkg = nan(numel(stnlist),1);
gfA_avg.ch4_eq_nmolkg = nan(numel(stnlist),1);
gfA_avg.F_CH4_15 = nan(numel(stnlist),1);
gfA_avg.F_CH4_15_std = nan(numel(stnlist),1);
gfA_avg.F_N2O_15 = nan(numel(stnlist),1);
gfA_avg.F_N2O_15_std = nan(numel(stnlist),1);



for i = 1:length(stnlist);
    substr = stnlist(i);
    strfindResult = strfind(gfA.station_str, substr);
    indices = find(~cellfun('isempty', strfindResult));
    gfA_avg.lat(i) = mean(gfA.lat(indices));
    gfA_avg.lon(i) = mean(gfA.lon(indices));  
    gfA_avg.n2o_nmolkg(i) = mean(gfA.n2o_nmolkg(indices));  
    % if there are multiple samples for the station, take standard
    % deviation of repeat measurements
    % else, take the standard deviation from duplicates
    if numel(indices) > 1
        gfA_avg.n2o_std_nmolkg(i) = std(gfA.n2o_nmolkg(indices)); 
    else
        gfA_avg.n2o_std_nmolkg(i) = mean(gfA.n2o_std_nmolkg(indices)); 
    end;    

    gfA_avg.n2o_eq_nmolkg(i) = mean(gfA.n2o_eq_nmolkg(indices)); 

    gfA_avg.ch4_nmolkg(i) = mean(gfA.ch4_nmolkg(indices));  
    % if there are multiple samples for the station, take standard
    % deviation of repeat measurements
    % else, take the standard deviation from duplicates
    if numel(indices) > 1
        gfA_avg.ch4_std_nmolkg(i) = std(gfA.ch4_nmolkg(indices)); 
    else
        gfA_avg.ch4_std_nmolkg(i) = mean(gfA.ch4_std_nmolkg(indices)); 
    end;

    gfA_avg.ch4_eq_nmolkg(i) = mean(gfA.ch4_eq_nmolkg(indices));       
    gfA_avg.F_N2O_15(i) = mean(gfA.F_N2O_15(indices));  
    gfA_avg.F_N2O_15_std(i) = std(gfA.F_N2O_15(indices)); 
    gfA_avg.F_CH4_15(i) = mean(gfA.F_CH4_15(indices));  
    gfA_avg.F_CH4_15_std(i) = std(gfA.F_CH4_15(indices)); 
    gfA_avg.k_wt_15_N2O(i) = mean(gfA.k_wt_15_N2O(indices));  
    gfA_avg.k_wt_15_CH4(i) = mean(gfA.k_wt_15_CH4(indices));     
end;

gfA_avg.DCH4 = (gfA_avg.ch4_nmolkg - gfA_avg.ch4_eq_nmolkg)./gfA_avg.ch4_eq_nmolkg .* 100;
gfA_avg.DN2O = (gfA_avg.n2o_nmolkg - gfA_avg.n2o_eq_nmolkg)./gfA_avg.n2o_eq_nmolkg .* 100;

gfA_avg.DCH4_std = gfA_avg.ch4_std_nmolkg./gfA_avg.ch4_eq_nmolkg .* 100;
gfA_avg.DN2O_std = gfA_avg.n2o_std_nmolkg./gfA_avg.n2o_eq_nmolkg .* 100;

% because no duplicates available for the 7th one, fill in for plotting
gfA_avg.DCH4_std(7) = mean(gfA_avg.DCH4_std(4:6);
gfA_avg.DN2O_std(7) = mean(gfA_avg.DN2O_std(4:6);

%save LIS_gas_flux_Aug_avg.mat gfA_avg gfA;
%%

% load Oct data
load LIS_gas_flux_Oct.mat;
gfO = LIS_gas_flux_Oct;
gfO.station_str = string(gfO.station);

sl = string(stnlist);
gfO_avg = table;

gfO_avg.station = sl'; % create table for average flux data
gfO_avg.lat = nan(numel(stnlist),1);
gfO_avg.lon = nan(numel(stnlist),1);
gfO_avg.n2o_nmolkg = nan(numel(stnlist),1);
gfO_avg.n2o_std_nmolkg = nan(numel(stnlist),1);
gfO_avg.n2o_eq_nmolkg = nan(numel(stnlist),1);
gfO_avg.ch4_nmolkg = nan(numel(stnlist),1);
gfO_avg.ch4_std_nmolkg = nan(numel(stnlist),1);
gfO_avg.ch4_eq_nmolkg = nan(numel(stnlist),1);
gfO_avg.F_CH4_15 = nan(numel(stnlist),1);
gfO_avg.F_CH4_15_std = nan(numel(stnlist),1);
gfO_avg.F_N2O_15 = nan(numel(stnlist),1);
gfO_avg.F_N2O_15_std = nan(numel(stnlist),1);



for i = 1:length(stnlist);
    substr = stnlist(i);
    strfindResult = strfind(gfO.station_str, substr);
    indices = find(~cellfun('isempty', strfindResult));
    gfO_avg.lat(i) = mean(gfO.lat(indices));
    gfO_avg.lon(i) = mean(gfO.lon(indices));  
    gfO_avg.n2o_nmolkg(i) = mean(gfO.n2o_nmolkg(indices));  
    % if there are multiple samples for the station, take standard
    % deviation of repeat measurements
    % else, take the standard deviation from duplicates
    if numel(indices) > 1
        gfO_avg.n2o_std_nmolkg(i) = std(gfO.n2o_nmolkg(indices)); 
    else
        gfO_avg.n2o_std_nmolkg(i) = mean(gfO.n2o_std_nmolkg(indices)); 
    end;     
    gfO_avg.n2o_eq_nmolkg(i) = mean(gfO.n2o_eq_nmolkg(indices));       
    gfO_avg.ch4_nmolkg(i) = mean(gfO.ch4_nmolkg(indices));  
    % if there are multiple samples for the station, take standard
    % deviation of repeat measurements
    % else, take the standard deviation from duplicates
    if numel(indices) > 1
        gfO_avg.ch4_std_nmolkg(i) = std(gfO.ch4_nmolkg(indices)); 
    else
        gfO_avg.ch4_std_nmolkg(i) = mean(gfO.ch4_std_nmolkg(indices)); 
    end;

    gfO_avg.ch4_eq_nmolkg(i) = mean(gfO.ch4_eq_nmolkg(indices));       
    gfO_avg.F_N2O_15(i) = mean(gfO.F_N2O_15(indices));  
    gfO_avg.F_N2O_15_std(i) = std(gfO.F_N2O_15(indices)); 
    gfO_avg.F_CH4_15(i) = mean(gfO.F_CH4_15(indices));  
    gfO_avg.F_CH4_15_std(i) = std(gfO.F_CH4_15(indices)); 
    gfO_avg.k_wt_15_N2O(i) = mean(gfO.k_wt_15_N2O(indices));  
    gfO_avg.k_wt_15_CH4(i) = mean(gfO.k_wt_15_CH4(indices));     
end;

gfO_avg.DCH4 = (gfO_avg.ch4_nmolkg - gfO_avg.ch4_eq_nmolkg)./gfO_avg.ch4_eq_nmolkg .* 100;
gfO_avg.DN2O = (gfO_avg.n2o_nmolkg - gfO_avg.n2o_eq_nmolkg)./gfO_avg.n2o_eq_nmolkg .* 100;

gfO_avg.DCH4_std = gfO_avg.ch4_std_nmolkg./gfO_avg.ch4_eq_nmolkg .* 100;
gfO_avg.DN2O_std = gfO_avg.n2o_std_nmolkg./gfO_avg.n2o_eq_nmolkg .* 100;


%save LIS_gas_flux_Oct_avg.mat gfO_avg gfO;
%%
% load May data
load LIS_gas_flux_May.mat;
gfM = LIS_gas_flux_May;
gfM.station_str = string(gfM.station);

sl = string(stnlist);
gfM_avg = table;

gfM_avg.station = sl'; % create table for average flux data
gfM_avg.lat = nan(numel(stnlist),1);
gfM_avg.lon = nan(numel(stnlist),1);
gfM_avg.n2o_nmolkg = nan(numel(stnlist),1);
gfM_avg.n2o_std_nmolkg = nan(numel(stnlist),1);
gfM_avg.n2o_eq_nmolkg = nan(numel(stnlist),1);
gfM_avg.ch4_nmolkg = nan(numel(stnlist),1);
gfM_avg.ch4_std_nmolkg = nan(numel(stnlist),1);
gfM_avg.ch4_eq_nmolkg = nan(numel(stnlist),1);
gfM_avg.F_CH4_15 = nan(numel(stnlist),1);
gfM_avg.F_CH4_15_std = nan(numel(stnlist),1);
gfM_avg.F_N2O_15 = nan(numel(stnlist),1);
gfM_avg.F_N2O_15_std = nan(numel(stnlist),1);



for i = 1:length(stnlist);
    substr = stnlist(i);
    strfindResult = strfind(gfM.station_str, substr);
    indices = find(~cellfun('isempty', strfindResult));
    gfM_avg.lat(i) = mean(gfM.lat(indices));
    gfM_avg.lon(i) = mean(gfM.lon(indices));  
    gfM_avg.n2o_nmolkg(i) = mean(gfM.n2o_nmolkg(indices));  
    % if there are multiple samples for the station, take standard
    % deviation of repeat measurements
    % else, take the standard deviation from duplicates
    if numel(indices) > 1
        gfM_avg.n2o_std_nmolkg(i) = std(gfM.n2o_nmolkg(indices)); 
    else
        gfM_avg.n2o_std_nmolkg(i) = mean(gfM.n2o_std_nmolkg(indices)); 
    end;     
    gfM_avg.n2o_eq_nmolkg(i) = mean(gfM.n2o_eq_nmolkg(indices));       
    gfM_avg.ch4_nmolkg(i) = mean(gfM.ch4_nmolkg(indices));  
    % if there are multiple samples for the station, take standard
    % deviation of repeat measurements
    % else, take the standard deviation from duplicates
    if numel(indices) > 1
        gfM_avg.ch4_std_nmolkg(i) = std(gfM.ch4_nmolkg(indices)); 
    else
        gfM_avg.ch4_std_nmolkg(i) = mean(gfM.ch4_std_nmolkg(indices)); 
    end;

    gfM_avg.ch4_eq_nmolkg(i) = mean(gfM.ch4_eq_nmolkg(indices));       
    gfM_avg.F_N2O_15(i) = mean(gfM.F_N2O_15(indices));  
    gfM_avg.F_N2O_15_std(i) = std(gfM.F_N2O_15(indices)); 
    gfM_avg.F_CH4_15(i) = mean(gfM.F_CH4_15(indices));  
    gfM_avg.F_CH4_15_std(i) = std(gfM.F_CH4_15(indices)); 
    gfM_avg.k_wt_15_N2O(i) = mean(gfM.k_wt_15_N2O(indices));  
    gfM_avg.k_wt_15_CH4(i) = mean(gfM.k_wt_15_CH4(indices));     
end;

gfM_avg.DCH4 = (gfM_avg.ch4_nmolkg - gfM_avg.ch4_eq_nmolkg)./gfM_avg.ch4_eq_nmolkg .* 100;
gfM_avg.DN2O = (gfM_avg.n2o_nmolkg - gfM_avg.n2o_eq_nmolkg)./gfM_avg.n2o_eq_nmolkg .* 100;

gfM_avg.DCH4_std = gfM_avg.ch4_std_nmolkg./gfM_avg.ch4_eq_nmolkg .* 100;
gfM_avg.DN2O_std = gfM_avg.n2o_std_nmolkg./gfM_avg.n2o_eq_nmolkg .* 100;


save LIS_gas_flux_May_avg.mat gfM_avg gfM;

%%


%%
load LIS_gas_flux_Aug_avg.mat
load LIS_gas_flux_Oct_avg.mat
load LIS_gas_flux_May_avg.mat

%%
[median(gfA_avg.DCH4) min(gfA_avg.DCH4) max(gfA_avg.DCH4)]
[median(gfO_avg.DCH4) min(gfO_avg.DCH4) max(gfO_avg.DCH4)]
[median(gfM_avg.DCH4) min(gfM_avg.DCH4) max(gfM_avg.DCH4)]

[median(gfA_avg.F_CH4_15) min(gfA_avg.F_CH4_15) max(gfA_avg.F_CH4_15)]
[median(gfO_avg.F_CH4_15) min(gfO_avg.F_CH4_15) max(gfO_avg.F_CH4_15)]
[median(gfM_avg.F_CH4_15) min(gfM_avg.F_CH4_15) max(gfM_avg.F_CH4_15)]

%%
[median(gfA_avg.DN2O) min(gfA_avg.DN2O) max(gfA_avg.DN2O)]
[median(gfO_avg.DN2O) min(gfO_avg.DN2O) max(gfO_avg.DN2O)]
[median(gfM_avg.DN2O) min(gfM_avg.DN2O) max(gfM_avg.DN2O)]

[median(gfA_avg.F_N2O_15) min(gfA_avg.F_N2O_15) max(gfA_avg.F_N2O_15)]
[median(gfO_avg.F_N2O_15) min(gfO_avg.F_N2O_15) max(gfO_avg.F_N2O_15)]
[median(gfM_avg.F_N2O_15) min(gfM_avg.F_N2O_15) max(gfM_avg.F_N2O_15)]


%%
[mean(gfA_avg.F_N2O_15) std(gfA_avg.F_N2O_15)
mean(gfO_avg.F_N2O_15) std(gfO_avg.F_N2O_15)
mean(gfM_avg.F_N2O_15) std(gfM_avg.F_N2O_15)]


[mean(gfA_avg.DN2O) std(gfA_avg.DN2O)
mean(gfO_avg.DN2O) std(gfO_avg.DN2O)
mean(gfM_avg.DN2O) std(gfM_avg.DN2O)]

%%
[mean(gfA_avg.n2o_nmolkg) std(gfA_avg.n2o_nmolkg)
mean(gfO_avg.n2o_nmolkg) std(gfO_avg.n2o_nmolkg)
mean(gfM_avg.n2o_nmolkg) std(gfM_avg.n2o_nmolkg)]

[mean(gfA_avg.ch4_nmolkg) std(gfA_avg.ch4_nmolkg)
mean(gfO_avg.ch4_nmolkg) std(gfO_avg.ch4_nmolkg)
mean(gfM_avg.ch4_nmolkg) std(gfM_avg.ch4_nmolkg)]

%%
[median(gfA_avg.n2o_nmolkg) min(gfA_avg.n2o_nmolkg) max(gfA_avg.n2o_nmolkg)]
[median(gfO_avg.n2o_nmolkg) min(gfO_avg.n2o_nmolkg) max(gfO_avg.n2o_nmolkg)]
[median(gfM_avg.n2o_nmolkg) min(gfM_avg.n2o_nmolkg) max(gfM_avg.n2o_nmolkg)]

%%
[median(gfA_avg.ch4_nmolkg) min(gfA_avg.ch4_nmolkg) max(gfA_avg.ch4_nmolkg)]
[median(gfO_avg.ch4_nmolkg) min(gfO_avg.ch4_nmolkg) max(gfO_avg.ch4_nmolkg)]
[median(gfM_avg.ch4_nmolkg) min(gfM_avg.ch4_nmolkg) max(gfM_avg.ch4_nmolkg)]


%%
[mean(gfA_avg.F_CH4_15) std(gfA_avg.F_CH4_15)
mean(gfO_avg.F_CH4_15) std(gfO_avg.F_CH4_15)
mean(gfM_avg.F_CH4_15) std(gfM_avg.F_CH4_15)]


[mean(gfA_avg.DCH4) std(gfA_avg.DCH4)
mean(gfO_avg.DCH4) std(gfO_avg.DCH4)
mean(gfM_avg.DCH4) std(gfM_avg.DCH4)]


%%
nr = 2; nc = 2; % number of rows and columns
lw = 2; % default line width
lw1 = 1;
fs = 14; % default font size
ms = 3; % default marker size
yt = [0 10 20 30]; %y-axis ticks;
xt = [0 5 10 15];
yl = [0 32]; % y-axis limit in m
xl = [-0.5 19]; %x-axis limit in km

cM = [0,158,155]./255;
cO = [86,180,233]./255;
cA = [230,159,0]./255;

f_ch4_err = 0.24;
f_n2o_err = 0.26;

ms=7;

fig=figure(1);
clf; 
clf;
sp=tight_subplot(nr,nc,[.06 .08],[.11 .08],[.09 .04]);
set(gcf, 'PaperUnits', 'inches');
set(gcf, 'PaperPositionMode', 'manual');
set(gcf, 'PaperPosition', [0 0 12 6]);
set(gcf,'renderer','painters');
    set(gcf,'GraphicsSmoothing','on')
colormap turbo;
    set(0,'DefaultTextFontName','Arial')

subplot(sp(1))
ymax = 15000;
hold on; box on;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
%set(gca,'xticklabel',km_transect_appx);
set(gca,'xtick',km_transect_appx);
set(gca,'ylim',[0 ymax]);
set(gca,'ytick',[0:5000:ymax]);
set(gca,'yticklabel',[0:5000:ymax]);
text(17.5,15000*0.9,'a','fontsize',fs);
dx=0.8;
text(0-2*dx,ymax*1.1,'EXR1','fontsize',fs);
text(1.4-dx*0.7,ymax*1.1,'EXRX','fontsize',fs);
text(5.4-dx,ymax*1.1,'MID3','fontsize',fs);
text(9-dx,ymax*1.1,'MID4','fontsize',fs);
text(13-dx,ymax*1.1,'MID5','fontsize',fs);
text(16.3-dx,ymax*1.1,'WLIS','fontsize',fs);
text(18.4-dx*0.5,ymax*1.1,'WLI6','fontsize',fs);

errorbar(km_transect_appx,gfA_avg.DCH4,gfA_avg.DCH4_std,'-o','markerfacecolor',cA,'color',cA,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfO_avg.DCH4,gfO_avg.DCH4_std,'-s','markerfacecolor',cO,'color',cO,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfM_avg.DCH4,gfM_avg.DCH4_std,'-^','markerfacecolor',cM,'color',cM,'linewidth',lw,'markersize',ms);

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks
%ax1.XTick = km_transect;         % Bottom ticks

legend('Aug','Oct','May','location','north');
%ylabel('\DeltaCH_4 (nmol kg^{-1})')
ylabel('\DeltaCH_4 [%]');
%xlabel('Transect distance [km]');

subplot(sp(3))
hold on; box on;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
set(gca,'xticklabel',km_transect_appx);
set(gca,'xtick',km_transect_appx);
set(gca,'ylim',[0 600]);
set(gca,'ytick',[0:200:600]);
set(gca,'yticklabel',[0:200:600]);
text(17.5,600*0.9,'c','fontsize',fs);
ms=7;
errorbar(km_transect_appx,gfA_avg.F_CH4_15,gfA_avg.F_CH4_15.*f_ch4_err,'-o','markerfacecolor',cA,'color',cA,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfO_avg.F_CH4_15,gfO_avg.F_CH4_15.*f_ch4_err,'-s','markerfacecolor',cO,'color',cO,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfM_avg.F_CH4_15,gfM_avg.F_CH4_15.*f_ch4_err,'-^','markerfacecolor',cM,'color',cM,'linewidth',lw,'markersize',ms);


%plot(gfO_avg.F_CH4_15,'-s','filled');
%plot(gfM_avg.F_CH4_15,'-^','filled');

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks
%ax1.XTick = km_transect;         % Bottom ticks

%legend('Aug','Oct','May');
%ylabel('\DeltaCH_4 (nmol kg^{-1})')
ylabel('CH_4 flux [\mumol m^{-2} d^{-1}]')
xlabel('Transect distance [km]');

subplot(sp(2))
hold on; box on;
ymax=80;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
%set(gca,'xticklabel',km_transect_appx);
set(gca,'xtick',km_transect_appx);
set(gca,'ylim',[0 ymax]);
set(gca,'ytick',[0:20:ymax]);
set(gca,'yticklabel',[0:20:ymax]);

errorbar(km_transect_appx,gfA_avg.DN2O,gfA_avg.DN2O_std,'-o','markerfacecolor',cA,'color',cA,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfO_avg.DN2O,gfO_avg.DN2O_std,'-s','markerfacecolor',cO,'color',cO,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfM_avg.DN2O,gfM_avg.DN2O_std,'-^','markerfacecolor',cM,'color',cM,'linewidth',lw,'markersize',ms);
text(17.5,80*0.9,'b','fontsize',fs);
dx=0.8;
text(0-2*dx,ymax*1.1,'EXR1','fontsize',fs);
text(1.4-dx*0.7,ymax*1.1,'EXRX','fontsize',fs);
text(5.4-dx,ymax*1.1,'MID3','fontsize',fs);
text(9-dx,ymax*1.1,'MID4','fontsize',fs);
text(13-dx,ymax*1.1,'MID5','fontsize',fs);
text(16.3-dx,ymax*1.1,'WLIS','fontsize',fs);
text(18.4-dx*0.5,ymax*1.1,'WLI6','fontsize',fs);


%plot(km_transect, gfA_avg.DN2O,'-o');
%plot(km_transect, gfO_avg.DN2O,'-s');
%plot(km_transect, gfM_avg.DN2O,'-^');

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks
%ax1.XTick = km_transect;         % Bottom ticks

%legend('Aug','Oct','May');
%ylabel('\DeltaCH_4 (nmol kg^{-1})')
ylabel('\DeltaN_2O [%]');
%xlabel('Transect distance [km]');

subplot(sp(4))
hold on; box on;
ymax=11;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
set(gca,'xticklabel',km_transect_appx);
set(gca,'xtick',km_transect_appx);
set(gca,'ylim',[0 ymax]);
set(gca,'ytick',[0:2:ymax]);
set(gca,'yticklabel',[0:2:ymax]);

errorbar(km_transect_appx,gfA_avg.F_N2O_15,gfA_avg.F_N2O_15.*f_n2o_err,'-o','color',cA,'markerfacecolor',cA,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfO_avg.F_N2O_15,gfO_avg.F_N2O_15.*f_n2o_err,'-s','color',cO,'markerfacecolor',cO,'linewidth',lw,'markersize',ms);
errorbar(km_transect_appx,gfM_avg.F_N2O_15,gfM_avg.F_N2O_15.*f_n2o_err,'-^','color',cM,'markerfacecolor',cM,'linewidth',lw,'markersize',ms);
text(17.5,ymax*0.9,'d','fontsize',fs);


%plot(gfO_avg.F_CH4_15,'-s','filled');
%plot(gfM_avg.F_CH4_15,'-^','filled');

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks
%ax1.XTick = km_transect;         % Bottom ticks

%legend('Aug','Oct','May');
%ylabel('\DeltaCH_4 (nmol kg^{-1})')
ylabel('N_2O flux [\mumol m^{-2} d^{-1}]')
xlabel('Transect distance [km]');

wysiwyg;

exportgraphics(gcf,'20250810_LIS_gas_flux.eps','BackgroundColor','none','ContentType','vector')


%%

subplot(sp(2))
hold on; box on;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
%set(gca,'xlim',[-0.2 7.2]);
%set(gca,'xticklabel',km_transect);
set(gca,'xtick',km_transect);
ylabel('CH_4 flux (\mumol m^{-2} d^{-1})')

plot(gfA_avg.F_CH4_15,'-o');
plot(gfO_avg.F_CH4_15,'-o');
plot(gfM_avg.F_CH4_15,'-o');
%legend('Aug','Oct','May');

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks


subplot(sp(3))
hold on; box on;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
%set(gca,'xticklabel',km_transect);
set(gca,'xtick',km_transect);
%set(gca,'xlim',[-0.2 7.2]);
set(gca,'xticklabel',stnlist);

plot(gfA_avg.DN2O,'-o');
plot(gfO_avg.DN2O,'-o');
plot(gfM_avg.DN2O,'-o');

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks

%legend('Aug','Oct','May');
%ylabel('N_2O (nmol kg^{-1})')
ylabel('\DeltaN_2O (%)');


subplot(sp(4))
hold on; box on;
set(gca,'tickdir','out');
set(gca,'fontsize',fs);
set(gca,'xlim',[-0.5 19]);
%set(gca,'xlim',[-0.2 7.2]);
set(gca,'xticklabel',stnlist);
ylabel('N_2O flux (\mumol m^{-2} d^{-1})')

plot(gfA_avg.F_N2O_15,'-o');
plot(gfO_avg.F_N2O_15,'-o');
plot(gfM_avg.F_N2O_15,'-o');

ax1.XAxisLocation = 'bottom';
ax1.YAxisLocation = 'left';
ax1.Box = 'off'; % Optional: remove the box to avoid double ticks

%legend('Aug','Oct','May');


%%
plot(gfO.F_CH4_15,'-o');
plot(gfM.F_CH4_15,'-o');

% make a plot of station vs flux and station vs sat anomaly
% average the results for repeat stations and show stdev