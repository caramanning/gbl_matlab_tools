load LIS_gas_flux_May_avg.mat; % load data
% in this matrix k_wt_15_N2O is weighted gas transfer velocity in 
gf = gfM_avg; % shorten variable name

% largest sources of uncertainty are parameterization of k, wind speed, and
% gas concentration. For monte carlo, assume all of these are systematic errors.
k_rsd = 0.2; % 20% relative standard deviation of gas transfer velocity (per Wanninkhof)
wind_rsd = 0.06; % approximate uncertainty in wind speed squared; 3% error in wind speed per manufacturer's specifications, increased to 6% because flux scales with wind speed squared
n2o_rsd = 0.04; % 4% relative standard deviation, based on variability in repeat casts collected at MID4 (larger than analytical uncertainty)
ch4_rsd = 0.12; % 12% relative standarde deviation, based on variability in repeat casts collected at MID4 (larger than analytical uncertainty)

dens = 1017; % approximate density for this seawater

% create matrices to store the output
sd_F_N2O = nan(length(gf.station),1);
sd_F_CH4 = nan(length(gf.station),1);


n=1000; % run for n iterations
% this loop calculates a list of possible fluxes accounting for the
% uncertainty in k, wind speed, and concentration based on monte carlo
% distribution
for i = 1:length(gf.station)
    % create matrices of k, wind speed uncertainty
    mc_k_wt_15_N2O = gf.k_wt_15_N2O(i) + k_rsd.*gf.k_wt_15_N2O(i).*randn(n,1); % uncertainty in kn2o linear scaling factor (0.266 for Sc = 660)
    mc_k_wt_15_CH4 = gf.k_wt_15_CH4(i) + k_rsd .* gf.k_wt_15_CH4(i) .* randn(n, 1); % uncertainty in kch4 linear scaling factor (0.266 for Sc = 660)
    mc_wind = (1 + wind_rsd.* randn(n, 1)); % additional uncertainty factor to multiply on k based on uncertainty in wind speed
    mc_n2o = gf.n2o_nmolkg(i) + n2o_rsd .* gf.n2o_nmolkg(i) .* randn(n, 1);
    mc_ch4 = gf.ch4_nmolkg(i) + ch4_rsd .* gf.ch4_nmolkg(i) .* randn(n, 1);

    % flux here is k [m/d] * n2o [nmol/kg] * dens [kg/m3] * [1 m3/1000 kg]
    % = nmol/m2/d
    mc_F_N2O = mc_k_wt_15_N2O .* mc_wind .* (mc_n2o - repmat(gf.n2o_eq_nmolkg(i),n,1)) .* dens ./1000;
    mc_F_CH4 = mc_k_wt_15_CH4 .* mc_wind .* (mc_ch4 - repmat(gf.ch4_eq_nmolkg(i),n,1)) .* dens ./1000;

    sd_F_N2O(i) = std(mc_F_N2O); % standard deviation of fluxes
    sd_F_CH4(i) = std(mc_F_CH4);

end

% get average % RSD for the all stations
rsd_F_N2O = sd_F_N2O./gf.F_N2O_15 .*100;
rsd_F_CH4 = sd_F_CH4./gf.F_CH4_15 .*100;


[mean(rsd_F_N2O) mean(rsd_F_CH4)]